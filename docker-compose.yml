services:
  # api:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   volumes:
  #     - .:/workspace
  #   env_file:
  #   - .env
  #   # Run a command against the development stage of the image
  #   command: yarn start:dev
  #   ports:
  #     - 3000:3000
  #   links:
  #     - database:${TYPEORM_HOST}
  #   depends_on:
  #     - database
  #   networks:
  #     - api_occri_network
  database:
    container_name: ${TYPEORM_HOST}
    image: 'mysql:8.0'
    ports:
      - "${TYPEORM_PORT}:${TYPEORM_PORT}"
    restart: unless-stopped
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${TYPEORM_PASSWORD}
      MYSQL_DATABASE: ${TYPEORM_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - api_occri_network
  admin:
    container_name: 'phpmyadmin'
    image: phpmyadmin/phpmyadmin:latest
    links:
     - database:${TYPEORM_HOST}
    depends_on:
     - database
    ports:
     - "8080:80"
    environment:
      MYSQL_ROOT_PASSWORD: ${TYPEORM_PASSWORD}
      PMA_HOST: ${TYPEORM_HOST}
      PMA_PORT: "3306"
      PMA_ARBITRARY: 1
    networks:
      - api_occri_network

networks:
  api_occri_network:
    driver: bridge
    name: api_occri_network
volumes:
  data:
